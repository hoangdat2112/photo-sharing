{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\5138HoangVanDat\\\\Downloads\\\\sandbox (1)\\\\client\\\\src\\\\Components\\\\Posts\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { SimpleGrid, Center, Heading, VStack, Button, useDisclosure } from \"@chakra-ui/react\";\nimport Post from \"../Posts/Post\";\nimport NewPost from \"./NewPost\";\nimport { EditIcon } from \"@chakra-ui/icons\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [page, setPage] = useSta;\n  const [posts, setPosts] = React.useState([]);\n  const fetchPosts = () => {\n    axios.get(\"http://localhost:8080/posts/\").then(res => {\n      let postsData = res.data;\n      postsData.sort((a, b) => {\n        return new Date(b.date) - new Date(a.date);\n      });\n      setPosts(postsData);\n    });\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const handlePrev = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  // Xử lý sự kiện nhấn nút Next\n  const handleNext = () => {\n    if (currentPage < Math.ceil(allPosts.length / postsPerPage)) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Center, {\n      py: 6,\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"solid\",\n          bg: \"teal.400\",\n          color: \"white\",\n          size: \"lg\",\n          mr: 4,\n          _hover: {\n            bg: \"teal.300\"\n          },\n          leftIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 23\n          }, this),\n          onClick: onOpen,\n          children: \"New Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h1\",\n          size: \"xl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n          columns: [1, 1, 1, 2, 2, 3],\n          spacing: 10,\n          children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n            postId: post._id,\n            author: post.author,\n            authorName: post.authorName,\n            authorPicture: post.authorProfilePicture,\n            title: post.title,\n            description: post.description,\n            date: post.date,\n            postPicture: post.postPicture,\n            fetchPosts: fetchPosts\n          }, post._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewPost, {\n      isOpen: isOpen,\n      onOpen: onOpen,\n      onClose: onClose,\n      fetchPosts: fetchPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrev,\n        disabled: currentPage === 1,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: currentPage === Math.ceil(allPosts.length / postsPerPage),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n};\n_s(Posts, \"9kqBTvfatlRYPa56sQEcWwDm8hs=\", false, function () {\n  return [useDisclosure];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","SimpleGrid","Center","Heading","VStack","Button","useDisclosure","Post","NewPost","EditIcon","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","_s","isOpen","onOpen","onClose","page","setPage","useSta","posts","setPosts","useState","fetchPosts","get","then","res","postsData","data","sort","a","b","Date","date","handlePrev","currentPage","setCurrentPage","handleNext","Math","ceil","allPosts","length","postsPerPage","children","py","variant","bg","color","size","mr","_hover","leftIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","as","columns","spacing","map","post","postId","_id","author","authorName","authorPicture","authorProfilePicture","title","description","postPicture","disabled","_c","$RefreshReg$"],"sources":["C:/Users/5138HoangVanDat/Downloads/sandbox (1)/client/src/Components/Posts/Posts.jsx"],"sourcesContent":["import React from \"react\";\nimport {\n  SimpleGrid,\n  Center,\n  Heading,\n  VStack,\n  Button,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport Post from \"../Posts/Post\";\nimport NewPost from \"./NewPost\";\nimport { EditIcon } from \"@chakra-ui/icons\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Posts = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [page,setPage]=useSta\n\n  const [posts, setPosts] = React.useState([]);\n\n  const fetchPosts = () => {\n    axios.get(\"http://localhost:8080/posts/\").then((res) => {\n      let postsData = res.data;\n      postsData.sort((a, b) => {\n        return new Date(b.date) - new Date(a.date);\n      });\n      setPosts(postsData);\n    });\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\nconst handlePrev = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  // Xử lý sự kiện nhấn nút Next\n  const handleNext = () => {\n    if (currentPage < Math.ceil(allPosts.length / postsPerPage)) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  return (\n    <>\n      <Center py={6}>\n        <VStack>\n          <Button\n            variant={\"solid\"}\n            bg={\"teal.400\"}\n            color={\"white\"}\n            size={\"lg\"}\n            mr={4}\n            _hover={{\n              bg: \"teal.300\",\n            }}\n            leftIcon={<EditIcon />}\n            onClick={onOpen}\n          >\n            New Post\n          </Button>\n          <Heading as=\"h1\" size=\"xl\"></Heading>\n          <SimpleGrid columns={[1, 1, 1, 2, 2, 3]} spacing={10}>\n            {posts.map((post) => (\n              <Post\n                key={post._id}\n                postId={post._id}\n                author={post.author}\n                authorName={post.authorName}\n                authorPicture={post.authorProfilePicture}\n                title={post.title}\n                description={post.description}\n                date={post.date}\n                postPicture={post.postPicture}\n                fetchPosts={fetchPosts}\n              />\n            ))}\n          </SimpleGrid>\n        </VStack>\n      </Center>\n\n      <NewPost\n        isOpen={isOpen}\n        onOpen={onOpen}\n        onClose={onClose}\n        fetchPosts={fetchPosts}\n      />\n       <div>\n        <button onClick={handlePrev} disabled={currentPage === 1}>Prev</button>\n        <button onClick={handleNext} disabled={currentPage === Math.ceil(allPosts.length / postsPerPage)}>Next</button>\n      </div>\n    </>\n  );\n};\n\nexport default Posts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}